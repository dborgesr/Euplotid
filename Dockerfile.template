FROM resin/rpi-raspbian:stretch

ENV INITSYSTEM on

RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

ENV APT_PACKAGES=" \
		psmisc \
		dialog \
#		nginx \
		php5-fpm \
		php5-cli \
		php5-common \
		php-apc \
		apache2-utils \
		gpac \
		motion \
		zip \
		libav-tools \
		gstreamer1.0-tools \
		git \
		libraspberrypi-bin \
		libraspberrypi-dev \
		libraspberrypi-doc \
		libraspberrypi0 \
		python3 \
		python3-dev \
		python3-pip \
		vim \
		tk-dev \
    	libpng-dev \
		gfortran \
		wget \
		libncurses-dev \
		libxml2-dev \
		ca-certificates \
		build-essential \
		libbz2-dev \
		libc6-dev \
		libgdbm-dev \
		libjpeg-dev \
#	liblapack-dev \
		libncurses-dev \
		libsqlite3-dev \
		libssl-dev \
		zlib1g-dev \
		curl \
		i2c-tools \
		liblzma-dev \
		xz-utils \
		dnsmasq \
		hostapd \
		iproute2 \
		iw \
		libdbus-1-dev \
		libexpat-dev \
		rfkill \
		nodejs \
		npm \
		cron \
		openscad"
		

RUN apt-get -q update && \ 
	apt-get dist-upgrade && \
	apt-get install -yq --no-install-recommends $APT_PACKAGES && \
	if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi  && \
  	pip3 install --upgrade pip setuptools && \
  	rm -rf "/var/lib/apt/lists/*"

RUN pip3 install \
		setuptools \
		gnureadline \
		jupyter \
		plotly \
		sense-hat \
		pyliftover \
  		scipy \
    	numpy \
    	nbpresent \
    	networkx \
    	solidpython && \
	pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip3 install -U

#Get stuff for interacting in real life
RUN cd /root && git clone git://git.drogon.net/wiringPi && cd wiringPi && ./build
RUN cd /root && git clone https://github.com/timleland/rfoutlet.git /var/www/rfoutlet
RUN cd /root && git clone https://github.com/RTIMULib/RTIMULib2.git && cd RTIMULib2/Linux/python && python3 setup.py build && python3 setup.py install

# Install packages for microscope camera
RUN git clone https://github.com/silvanmelchior/RPi_Cam_Web_Interface.git && \
	cd RPi_Cam_Web_Interface && \
    chmod u+x *.sh && \
    mkdir -p /run/shm/mjpeg && \
    sed -i 's/sudo //g' install.sh && \
    sed -i 's/sudo //g' start.sh && \
    sed -i 's/sudo //g' stop.sh && \
    sed -i 's/sudo //g' remove.sh && \
    sed -i 's/sudo //g' update.sh && \
    sed -i 's/sudo //g' RPi_Cam_Web_Interface_Installer.sh && \
    sed -i 's/sudo shutdown -r now//g' www/macros/error_hard.sh && \
    sed -i 's/80/8080/g' install.sh && \  
    rm www/macros/error_hard.sh && \
    mkdir -p /opt/vc/bin && \
	cp bin/raspimjpeg /opt/vc/bin/ && \
	chmod 755 /opt/vc/bin/raspimjpeg && \
	echo /opt/vc/lib > /etc/ld.so.conf	 && \
	if [ ! -e /usr/bin/raspimjpeg ]; then ln -s /opt/vc/bin/raspimjpeg /usr/bin/raspimjpeg; fi && \
	ldconfig && \
	wget https://raw.githubusercontent.com/droogmic/rpi-cam-web-docker/master/install/config.txt && \
	sed -i "s/80/8080/g" config.txt && \
	sed -i "s/nginx/apache/g" config.txt && \
	sed -i "s/rpicamdir=\"\"/rpicamdir=\"microscope\"/g" config.txt && \
	./install.sh q  

	
#Configure jupyter
RUN jupyter notebook --generate-config --allow-root && \
	sed -i "/c.NotebookApp.open_browser/c c.NotebookApp.open_browser = False" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.ip/c c.NotebookApp.ip = '*'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.notebook_dir/c c.NotebookApp.notebook_dir = '/root/Euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.token/c c.NotebookApp.token = 'euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.iopub_data_rate_limit/c c.NotebookApp.iopub_data_rate_limit = 10000000" /root/.jupyter/jupyter_notebook_config.py


# Install wifi connect
ENV DEVICE_TYPE=%%RESIN_MACHINE_NAME%%

# Install node
ENV NODE_VERSION 6.9.1
RUN curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-armv6l.tar.gz" && \
    echo "0b30184fe98bd22b859db7f4cbaa56ecc04f7f526313c8da42315d89fabe23b2  node-v$NODE_VERSION-linux-armv6l.tar.gz" | sha256sum -c - && \
    tar -xzf "node-v$NODE_VERSION-linux-armv6l.tar.gz" -C /usr/local --strip-components=1 && \
    rm "node-v$NODE_VERSION-linux-armv6l.tar.gz" && \
    npm config set unsafe-perm true -g --unsafe-perm && \
    rm -rf /tmp/*

# Install resin-wifi-connect
ENV RESIN_WIFI_CONNECT_VERSION 2.0.7
RUN curl -SL "https://github.com/resin-io/resin-wifi-connect/archive/v$RESIN_WIFI_CONNECT_VERSION.tar.gz" \
    | tar xzC /usr/src/app/ && \
    mv resin-wifi-connect-$RESIN_WIFI_CONNECT_VERSION resin-wifi-connect && \
    cd resin-wifi-connect && \
    JOBS=MAX npm install --unsafe-perm --production && \
    npm cache clean && \
    ./node_modules/.bin/bower --allow-root install && \
    ./node_modules/.bin/bower --allow-root cache clean && \
    ./node_modules/.bin/coffee -c ./src

#Get Euplotid 
RUN cd /root && git clone -b master --single-branch https://github.com/dborgesr/Euplotid.git
WORKDIR /root/Euplotid

EXPOSE 80
CMD ["bash", "./start.sh"]