#Minitid image to take in FPKM, normalized DNA-DNA interactions, ChiP-Seq, Chromatin Accessibility and build, annotate, and visualize INs
#FROM resin/rpi-raspbian:jessie
FROM resin/raspberry-pi-alpine
MAINTAINER Diego Borges <dborgesr@mit.edu>
USER root

WORKDIR /root

ENV APK_PACKAGES=" \
	tk-dev \
	libpng-dev \
	gfortran \
	wget \
	git \
	vim \
	libxml2-dev \
	ca-certificates \
	build-base #start alpine packages \
	bz2-dev \
	libc6-compat \
	gdbm-dev \
	hdf5-dev \
	jpeg-dev \
	lapack-dev \
	ncurses5 \
	sqlite-dev \
	openssl-dev \
	zlib "

ENV APT_PACKAGES=" \
	tk-dev \
    libpng-dev \
	gfortran \
	wget \
	git \
	vim \
	libxml2-dev \
	ca-certificates \
	build-base
	build-essential \
	libbz2-dev \
	libc6-dev \
	libgdbm-dev \
	libhdf5-dev \
	libjpeg-dev \
	liblapack-dev \
	libncurses5-dev \
	libncursesw5-dev \
	libsqlite3-dev \
	libssl-dev \
	zlib1g-dev"

# Install packages necessary for compiling python using either Debian or Alpine package manager
#RUN apt-get update && apt-get upgrade && apt-get install -y $APT_PACKAGES
RUN apk update  \ 
  # replacing default repositories with edge ones
  && echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" > /etc/apk/repositories \
  && echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
  && echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories \ 
  && apk add --no-cache $APK_PACKAGES

        
        


# Download and compile python
# Set the python version
ENV PYTHON_VERSION 3.6.0
ADD "https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz" /root/Python-${PYTHON_VERSION}.tgz
RUN tar zxvf "Python-${PYTHON_VERSION}.tgz" \
        && cd Python-${PYTHON_VERSION} \
        && ./configure \
        && make \
        && make install \
        && cd .. \
        && rm -rf "./Python-${PYTHON_VERSION}" \
        && rm "./Python-${PYTHON_VERSION}.tgz"

#Links for libraries to install correctly
RUN ln -s /usr/include/locale.h /usr/include/xlocale.h
# Update pip and install jupyter
RUN pip3 install --upgrade pip
RUN pip3 install \
	readline \
	jupyter \
	plotly \
	sense-hat \
	myvariant \
	mygene \
	pysam \
	networkx \
    pandas \
    joblib \
    biopython \
    pyliftover \
    scipy \
    louvain \
    nbpresent 
#    pytorch \
#    torchvision

#Upgrade pip packages
RUN pip3 freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip3 install -U

#Get RTIMULIB, not working yet :(
RUN cd /root && git clone https://github.com/RPi-Distro/RTIMULib.git

#Get Euplotid  
RUN cd /root && git clone https://github.com/dborgesr/Euplotid.git
# Set pipelines as workdir
WORKDIR /root/Euplotid

#Configure jupyter
RUN jupyter notebook --generate-config --allow-root && \
	sed -i "/c.NotebookApp.open_browser/c c.NotebookApp.open_browser = False" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.ip/c c.NotebookApp.ip = '*'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.notebook_dir/c c.NotebookApp.notebook_dir = '/root/Euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.token/c c.NotebookApp.token = 'euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.iopub_data_rate_limit/c c.NotebookApp.iopub_data_rate_limit = 10000000" /root/.jupyter/jupyter_notebook_config.py

EXPOSE 8893
CMD ["jupyter", "notebook", "--allow-root", "--port=8893", "--no-browser", "--ip=0.0.0.0"]
