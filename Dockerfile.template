#Minitid image for microscope and viewing
FROM resin/rpi-raspbian:stretch

USER root

WORKDIR /root

ENV APT_PACKAGES=" \
		psmisc \
		dialog \
		nginx \
		php7.0-fpm \
		php7.0-cli \
		php7.0-common \
#		php-apc \
#		apache2-utils \
		gpac \
		motion \
		zip \
		libav-tools \
		gstreamer1.0-tools \
		git \
		libraspberrypi-bin \
		libraspberrypi-dev \
		libraspberrypi-doc \
		libraspberrypi0 \
		vim \
		tk-dev \
    	libpng-dev \
		gfortran \
		wget \
		libncurses-dev \
		libxml2-dev \
		ca-certificates \
		build-essential \
		libbz2-dev \
		libc6-dev \
		libgdbm-dev \
		libjpeg-dev \
#	liblapack-dev \
		libncurses-dev \
		libsqlite3-dev \
		libssl-dev \
		zlib1g-dev \
		curl \
		i2c-tools \
		liblzma-dev \
		xz-utils \
		dnsmasq \
		hostapd \
		iproute2 \
		iw \
		libdbus-1-dev \
		libexpat-dev \
		rfkill \
		nodejs \
		npm \
		cron \
#		openscad \
		sqlite3 \
		libsqlite3-dev \
		libxslt-dev \
		libffi-dev \
		libffi6 \
		node-gyp \
		nodejs-dev \
		libssl1.0-dev"

RUN apt-get -q update && \ 
	apt-get dist-upgrade && \
	apt-get install -yq --no-install-recommends $APT_PACKAGES && \
  	rm -rf "/var/lib/apt/lists/*"
  
#Install php7
#RUN cd /root && git clone https://github.com/kasparsd/php-7-debian.git && \
#	cd php-7-debian/  && \
#	./build.sh && \
#	./install.sh
  
RUN curl -s -L https://github.com/jjhelmus/berryconda/releases/download/v2.0.0/Berryconda3-2.0.0-Linux-armv7l.sh > miniconda.sh && \
    bash miniconda.sh -b -p /opt/conda && \
    rm miniconda.sh && \
    export PATH=/opt/conda/bin:$PATH  && \
    conda config --set show_channel_urls True && \
    conda config --add channels rpi && \
#    conda config --add channels conda-forge && \
    conda update conda && \
    conda update --all --yes && \
#    conda install conda-build && \
#    conda install anaconda-client && \
    conda install -y pip \
	    setuptools && \
	conda clean -tipy && \
	if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi
	
ENV PATH=/opt/conda/bin:$PATH	

RUN pip install \
	setuptools \
	gnureadline \
	jupyter \
	plotly \
#	myvariant \
#	mygene \
#	pysam \
#    pandas \
    joblib \
#    biopython \
#    pyliftover \
#    scipy \
    numpy \
    nbpresent \
    networkx \
    python-louvain \
    jupyter_contrib_nbextensions \
    ipywidgets \
    solidpython \
    dash \
    dash-html-components \
    dash-core-components \
    dash-renderer \
    flask \
    flask_sqlalchemy \
    pandas \
    cffi \
    python-crontab \
    dwf && \
	pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U

# Install packages for microscope camera
RUN mkdir -p /usr/src/app && \
	cd /usr/src/app && \
	git clone https://github.com/silvanmelchior/RPi_Cam_Web_Interface.git && \
	cd RPi_Cam_Web_Interface && \
    chmod u+x *.sh && \
    mkdir -p /run/shm/mjpeg && \
    sed -i 's/sudo //g' install.sh && \
    sed -i 's/sudo //g' start.sh && \
    sed -i 's/sudo //g' stop.sh && \
    sed -i 's/sudo //g' remove.sh && \
    sed -i 's/sudo //g' update.sh && \
    sed -i 's/sudo //g' RPi_Cam_Web_Interface_Installer.sh && \
    sed -i 's/sudo shutdown -r now//g' www/macros/error_hard.sh && \
    sed -i 's/80/8080/g' install.sh && \  
    sed -i '/raspizip/d' install.sh && \
    rm www/macros/error_hard.sh && \
    mkdir -p /opt/vc/bin && \
	cp bin/raspimjpeg /opt/vc/bin/ && \
	chmod 755 /opt/vc/bin/raspimjpeg && \
	echo /opt/vc/lib > /etc/ld.so.conf	 && \
	if [ ! -e /usr/bin/raspimjpeg ]; then ln -s /opt/vc/bin/raspimjpeg /usr/bin/raspimjpeg; fi && \
	ldconfig && \
	wget https://raw.githubusercontent.com/droogmic/rpi-cam-web-docker/master/install/config.txt && \
	sed -i "s/80/8080/g" config.txt && \
#	sed -i "s/nginx/apache/g" config.txt && \
	sed -i "s/rpicamdir=\"\"/rpicamdir=\"microscope\"/g" config.txt && \
	./install.sh q 

#Configure jupyter
RUN jupyter notebook --generate-config --allow-root && \
	sed -i "/c.NotebookApp.open_browser/c c.NotebookApp.open_browser = False" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.ip/c c.NotebookApp.ip = '*'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.notebook_dir/c c.NotebookApp.notebook_dir = '/root/Euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.token/c c.NotebookApp.token = 'euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.iopub_data_rate_limit/c c.NotebookApp.iopub_data_rate_limit = 10000000" /root/.jupyter/jupyter_notebook_config.py \
        && jupyter nbextension enable --py widgetsnbextension \
        && jupyter contrib nbextension install --system \
        && jupyter nbextension install nbpresent --py --overwrite --system \
		&& jupyter nbextension enable nbpresent --py --system \
		&& jupyter serverextension enable nbpresent --py --system 

#Get stuff for interacting in real lifef
RUN cd /root && git clone git://git.drogon.net/wiringPi && cd wiringPi && ./build
RUN cd /root && git clone https://github.com/timleland/rfoutlet.git /var/www/rfoutlet
RUN cd /root && git clone https://github.com/RTIMULib/RTIMULib2.git && cd RTIMULib2/Linux/python && python3 setup.py build && python3 setup.py install

# Install wifi connect
ENV DEVICE_TYPE=%%RESIN_MACHINE_NAME%%

# Install node
ENV NODE_VERSION 9.4.0
RUN curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-armv6l.tar.gz" && \
    tar -xzf "node-v$NODE_VERSION-linux-armv6l.tar.gz" -C /usr/local --strip-components=1 && \
    rm "node-v$NODE_VERSION-linux-armv6l.tar.gz" && \
    npm config set unsafe-perm true -g --unsafe-perm && \
    rm -rf /tmp/*

RUN mkdir -p /usr/src/app
# Install resin-wifi-connect
RUN curl https://api.github.com/repos/resin-io/resin-wifi-connect/releases/latest -s \
    | grep -hoP 'browser_download_url": "\K.*%%RESIN_ARCH%%\.tar\.gz' \
    | xargs -n1 curl -Ls \
| tar -xvz -C /usr/src/app/

#Install openscad
RUN cd /root && \
	git clone https://github.com/openscad/openscad.git && \
	cd openscad && ./scripts/uni-get-dependencies.sh && \
	qmake openscad.pro && make && make install 

# Install Waveforms SDK for Digilent
RUN cd /root && \
	wget https://reference.digilentinc.com/lib/exe/fetch.php?tok=08c5c9&media=https%3A%2F%2Ffiles.digilent.com%2FSoftware%2FWaveforms2015%2F3.7.5%2Fdigilent.waveforms_3.7.5_armhf.deb && \
	dpkg -i digilent.waveforms_3.7.5_armhf.deb

#Get Euplotid and define variables
ENV EUPLO_ARDUINO=false
ENV EUPLO_RPICAM=true

RUN cd /root && git clone -b master --single-branch https://github.com/dborgesr/Euplotid.git

WORKDIR /root/Euplotid


EXPOSE 80
EXPOSE 8888
CMD ["bash", "./start.sh"]