#Euplotid alpine minimal deploy image for x86

#FROM alpine:latest as builder
FROM python:3.6.8-slim-stretch as builder


RUN mkdir /install
WORKDIR /install

ENV APK_PACKAGES=" \
	build-base \
	ncurses-dev \
	curl \
	readline-dev \
	musl \
	musl-dev \
	python3 \
	python3-dev \
	"
	
# Install packages necessary for compiling python using Alpine package manager, few extra commands for linking libraries
#RUN apk update  \ 
  # replacing default repositories with edge ones
#  && echo "http://dl-cdn.alpinelinux.org/alpine/edge/testing" > /etc/apk/repositories \
#  && echo "http://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories \
#  && echo "http://dl-cdn.alpinelinux.org/alpine/edge/main" >> /etc/apk/repositories \ 
#  && apk add --no-cache $APK_PACKAGES  \
#  && python3 -m ensurepip \
#  && if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi \
#  && pip3 install --upgrade pip setuptools \
#  && rm -r /root/.cache \
#  && ln -s /usr/include/locale.h /usr/include/xlocale.h \
#  && apk update \
#  && apk upgrade \
#  && rm -rf /var/cache/apk/*

ENV APT_PACKAGES=" \
	software-properties-common \
	wget \
	bzip2 \
	build-essential \
	libreadline-dev \
	vim \
# libboost-all-dev \
	zlib1g-dev \
	libgsl0-dev \
	curl \
	zip \
	unzip \
	apt-transport-https \
	ca-certificates \
	"
	
# Install few tools using apt-get required to get conda package manager up and running 
RUN apt-get update && apt-get install -y --no-install-recommends \
	$APT_PACKAGES \
  && apt-get update \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* 
  
COPY NanotidDockerImage/requirements.txt /requirements.txt
#RUN pip install --install-option="--prefix=/install" numpy && \
#	pip install --install-option="--prefix=/install" -r /requirements.txt 
RUN pip install -r /requirements.txt 

#FROM python:3.6.8-alpine3.9
FROM python:3.6.8-slim-stretch

#COPY --from=builder /install /usr/local
COPY --from=builder /usr/local /usr/local

RUN mkdir /app
WORKDIR /app
USER root

# Install packages necessary for compiling python using Alpine package manager, few extra commands for linking libraries
#RUN apk update  \ 
#  && apk add --no-cache libstdc++  \
#  && apk update \
#  && apk upgrade \
#  && rm -rf /var/cache/apk/*
  
# Install few tools using apt-get required to get conda package manager up and running 
RUN apt-get update && apt-get install -y --no-install-recommends \
	bash \
	wget \
  && apt-get update \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* 

COPY ./euplotid/applotid.py ./start.sh /app/
RUN chmod 755 /app/applotid.py /app/start.sh

#Define startup behavior
ENV EUPLO_IMAGE=nanotid
ENV EUPLO_DEPLOY=true

EXPOSE 80
CMD ["/bin/ash", "/app/start.sh"]