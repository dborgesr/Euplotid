#Nanotid image for arduinos, environmental monitoring, controlling X10
FROM resin/rpi-raspbian:latest

USER root

WORKDIR /root

ENV APT_PACKAGES=" \
		psmisc \
		dialog \
#		nginx \
#		php5-fpm \
#		php5-cli \
#		php5-common \
#		php-apc \
#		apache2-utils \
#		gpac \
#		motion \
		zip \
#		libav-tools \
#		gstreamer1.0-tools \
		git \
		libraspberrypi-bin \
		libraspberrypi-dev \
		libraspberrypi-doc \
		libraspberrypi0 \
		vim \
		tk-dev \
    	libpng-dev \
#		gfortran \
		wget \
		libncurses-dev \
		libxml2-dev \
		ca-certificates \
#		build-essential \
		libbz2-dev \
		libc6-dev \
		libgdbm-dev \
		libjpeg-dev \
#	liblapack-dev \
		libncurses-dev \
		libssl-dev \
		zlib1g-dev \
		curl \
		i2c-tools \
		liblzma-dev \
		xz-utils \
		dnsmasq \
		hostapd \
		iproute2 \
		iw \
		libdbus-1-dev \
		libexpat-dev \
		rfkill \
#		nodejs \
#		npm \
#		cron \
#        arduino \
#        g++ \
#        gcc \
#        usbutils \
#        make \
	sqlite \
	sqlite3 \
	libsqlite3-dev \
	libxslt-dev \
#	python3-lxml \
	libffi-dev \
	libffi6"

RUN apt-get -q update && \ 
	apt-get dist-upgrade && \
	apt-get install -yq --no-install-recommends $APT_PACKAGES && \
  	rm -rf "/var/lib/apt/lists/*"
  
RUN curl -s -L https://github.com/jjhelmus/berryconda/releases/download/v2.0.0/Berryconda3-2.0.0-Linux-armv6l.sh > miniconda.sh && \
    bash miniconda.sh -b -p /opt/conda && \
    rm miniconda.sh && \
    export PATH=/opt/conda/bin:$PATH  && \
#    conda config --set show_channel_urls True && \
#    conda config --add channels rpi && \
#    conda config --add channels conda-forge && \
#    conda update conda && \
#    conda update --all --yes && \
#    conda install conda-build && \
#    conda install anaconda-client && \
    conda install -y pip \
	    setuptools && \
	conda clean -tipy && \
	if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi
ENV PATH=/opt/conda/bin:$PATH	

#Doesn't work for whatever reason? can't find r
#RUN conda install -c rpi numpy 

RUN pip install \
	setuptools \
	gnureadline \
	jupyter \
	plotly \
#	sense-hat \
#    biopython \
#    nbpresent \
#    networkx \
#    python-louvain \ 
#    ipywidgets \
#    jupyter_contrib_nbextensions \
    dash \
    dash-html-components \
    dash-core-components \
    dash-renderer \
    flask \
    flask_sqlalchemy \
#    pandas \
    cffi \
    apscheduler \ 
    rpi-rf \
    && \
	pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U

#Enable google drive in jupyterlab
RUN pip install -U pip setuptools --ignore-installed && \
	pip install jupyterlab --no-cache-dir && \
	jupyter serverextension enable --py jupyterlab --sys-prefix	
#	jupyter labextension install @jupyterlab/google-drive && \
#	jupyter labextension install @jupyterlab/plotly-extension
	
#set bash as default shell
ENV SHELL=/bin/bash

#Configure jupyter
RUN jupyter notebook --generate-config --allow-root && \
	sed -i "/c.NotebookApp.open_browser/c c.NotebookApp.open_browser = False" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.ip/c c.NotebookApp.ip = '*'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.notebook_dir/c c.NotebookApp.notebook_dir = '/root/Euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.token/c c.NotebookApp.token = 'euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.iopub_data_rate_limit/c c.NotebookApp.iopub_data_rate_limit = 10000000" /root/.jupyter/jupyter_notebook_config.py 
#        && jupyter nbextension enable --py widgetsnbextension \
#        && jupyter contrib nbextension install --system \
#        && jupyter nbextension install nbpresent --py --overwrite --system \
#		&& jupyter nbextension enable nbpresent --py --system \
#		&& jupyter serverextension enable nbpresent --py --system 

#Get stuff for interacting in real life
#RUN cd /root && git clone https://github.com/WiringPi/WiringPi.git && cd WiringPi && ./build
#RUN cd /root && git clone https://github.com/timleland/rfoutlet.git /var/www/rfoutlet && chmod 755 /var/www/rfoutlet/codesend
#RUN cd /root && git clone https://github.com/RTIMULib/RTIMULib2.git && cd RTIMULib2/Linux/python && python3 setup.py build && python3 setup.py install

# Install wifi connect
ENV DEVICE_TYPE=%%RESIN_MACHINE_NAME%%

# Install node
#ENV NODE_VERSION 9.4.0
#RUN curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-armv6l.tar.gz" && \
#    tar -xzf "node-v$NODE_VERSION-linux-armv6l.tar.gz" -C /usr/local --strip-components=1 && \
#    rm "node-v$NODE_VERSION-linux-armv6l.tar.gz" && \
#    npm config set unsafe-perm true -g --unsafe-perm && \
#    rm -rf /tmp/*

RUN mkdir -p /usr/src/app
# Install resin-wifi-connect
RUN curl https://api.github.com/repos/resin-io/resin-wifi-connect/releases/latest -s \
    | grep -hoP 'browser_download_url": "\K.*%%RESIN_ARCH%%\.tar\.gz' \
    | xargs -n1 curl -Ls \
    | tar -xvz -C /usr/src/app/

#Get Euplotid, define variable and define timezone
ENV JUPYTER_PORT=8888
ENV EUPLO_IMAGE=nanotid
ENV EUPLO_ARDUINO=false
ENV EUPLO_RPICAM=false

#set correct timezone (EST)
RUN cp /usr/share/zoneinfo/America/New_York /etc/localtime

#RUN cd /root && git clone -b master --single-branch https://github.com/dborgesr/Euplotid.git

#Define arduino board attached to RpiOw and setup
ENV ARDUINODIR /usr/share/arduino
ENV BOARD mega2560
RUN cd /root/Euplotid/arduino_code && make
WORKDIR /root/Euplotid


EXPOSE 80
EXPOSE $JUPYTER_PORT
CMD ["bash", "./start.sh"]

