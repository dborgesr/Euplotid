#Minitid image to take in FPKM, normalized DNA-DNA interactions, ChiP-Seq, Chromatin Accessibility and build, annotate, and visualize INs
FROM resin/rpi-raspbian:jessie
USER root

ENV CONDA_DIR="/opt/conda"
ENV PATH="$CONDA_DIR/bin:$PATH"

ENV APT_PACKAGES=" \
	tk-dev \
    libpng-dev \
	gfortran \
	wget \
	git \
	vim \
	libxml2-dev \
	ca-certificates \
	build-essential \
	libbz2-dev \
	libc6-dev \
	libgdbm-dev \
	libhdf5-dev \
	libjpeg-dev \
	liblapack-dev \
	libncurses5-dev \
	libncursesw5-dev \
	libsqlite3-dev \
	libssl-dev \
	zlib1g-dev \
	curl"

RUN apt-get update && apt-get upgrade && apt-get install -y $APT_PACKAGES
RUN curl -s -L https://github.com/jjhelmus/berryconda/releases/download/v1.0.0/Berryconda3-1.0.0-Linux-armv7l.sh > miniconda.sh && \
    bash miniconda.sh -b -p /opt/conda && \
    rm miniconda.sh && \
    export PATH=/opt/conda/bin:$PATH && \
    conda config --set show_channel_urls True && \
    conda config --add channels rpi && \
    conda config --add channels conda-forge && \
    conda update conda && \
    conda install python=3.6 &&\
    conda update --all --yes && \
    conda install conda-build && \
    conda install anaconda-client && \
	conda clean -tipy 
	
#RUN conda install -y -c soumith \
#    	pytorch \
#    	torchvision \
#    	jupyter_core \
#    	notebook
#    	nbpresent \
#        conda install -y -c edurand \
#    	myvariant \
#    	mygene && \
#RUN conda install -y -c bioconda \
#    	pysam \
#    	networkx \
#    	pandas \
#    	joblib \
#    	biopython \
#    	pyliftover \
#    	scipy \
#    	bedops \
#    	plotly && \
#    conda update --all --yes && \
#    conda config --set auto_update_conda False && \
#    conda clean --all --yes && \
#    mkdir -p "$CONDA_DIR/locks" && \
#    chmod 777 "$CONDA_DIR/locks"

RUN conda install -y pip
RUN pip install --no-cache-dir \
	readline \
	jupyter \
	plotly \
	sense-hat \
	myvariant \
	mygene \
	pysam \
    pandas \
    joblib \
    biopython \
    pyliftover \
    scipy \
    nbpresent \
    networkx \
    python-louvain && \
	pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs -n1 pip install -U

ENV CMAKE_PREFIX_PATH=$CONDA_DIR
# Install basic dependencies
#RUN conda install numpy pyyaml setuptools cmake gcc cffi
#RUN cd /root && git clone https://github.com/pytorch/pytorch.git
#RUN conda install -c soumith magma-cuda80 # or magma-cuda75 if CUDA 7.5
#RUN cd /root/pytorch && python setup.py install

#Get Louvain
#RUN cd /root && git clone https://github.com/taynaud/python-louvain.git && cd python-louvain && python setup.py install

#Get Euplotid  
RUN cd /root && git clone -b master --single-branch https://github.com/dborgesr/Euplotid.git
# Set pipelines as workdir
WORKDIR /root/Euplotid

#Get stuff for controlling X10
RUN cd /root && git clone git://git.drogon.net/wiringPi && cd wiringPi && ./build
RUN cd /root && git clone https://github.com/timleland/rfoutlet.git /var/www/rfoutlet

#Get RTIMULib for pisense
RUN cd /root && git clone https://github.com/RPi-Distro/RTIMULib.git && cd RTIMULib/Linux/python && python setup.py build && python setup.py install

#Configure jupyter
RUN jupyter notebook --generate-config --allow-root && \
	sed -i "/c.NotebookApp.open_browser/c c.NotebookApp.open_browser = False" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.ip/c c.NotebookApp.ip = '*'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.notebook_dir/c c.NotebookApp.notebook_dir = '/root/Euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.token/c c.NotebookApp.token = 'euplotid'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.iopub_data_rate_limit/c c.NotebookApp.iopub_data_rate_limit = 10000000" /root/.jupyter/jupyter_notebook_config.py

EXPOSE 8893
CMD ["jupyter", "notebook", "--allow-root", "--port=8893", "--no-browser", "--ip=0.0.0.0"]
